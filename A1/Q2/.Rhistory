print(second_card)
# get the green_card from the data, address column by name
green_1<- data$green_card1
green_2 <-data$green_card2
most_selected_card <- function(cards){
card_table <-table(cards)
card_name <-card_table[which.max(card_table)]
return(card_name)
}
print("the first selected card is:")
first_card <-most_selected_card(green_1)
print(first_card)
print("the second selected card is:")
second_card <-most_selected_card(green_2)
print(second_card)
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
print(correct_g1)
print(correct_g2)
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
print(correct_g1)
print(correct_g2)
print(length(which(correct==TRUE)))
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
print(correct_g1)
print(correct_g2)
print(length(which(correct_g1==TRUE)))
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
print(correct_g1)
print(correct_g2)
print(length(which(correct_g1==TRUE)))
print(length(which(correct_g2==TRUE)))
percent1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent2 <- length(which(correct_g2==TRUE))/length(correct_g2)
percent1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent2 <- length(which(correct_g2==TRUE))/length(correct_g2)
print(percent1)
print(percent2)
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
correct_both = correct_g1 & correct_g2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
correct_both = correct_g1 & correct_g2
print(length(correct_both))
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
correct_both = correct_g1 & correct_g2
print(correct_both)
print(length(correct_both))
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
correct_both = correct_g1 & correct_g2
percent_both <- length(which(correct_both==TRUE))/length(correct_both)
print(percent_both)
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
correct_both = correct_g1 & correct_g2
percent1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_both <- length(which(correct_both==TRUE))/length(correct_both)
percent_both_when_1 =  percent_both/percent1
print(percent_both_when_1)
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
correct_both = correct_g1 & correct_g2
percent1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_both <- length(which(correct_both==TRUE))/length(correct_both)
percent_both_when_1 =  percent_both/percent1
print(percent_both_when_1)
green_1<- data$green_card1
green_2 <-data$green_card2
n1<-numeric_version(green_1)
green_1<- data$green_card1
green_2 <-data$green_card2
n1<-numeric_version(correct_g1)
n1<-vrepl(correct_g1, TRUE,0.5)
n1<-vrepl(correct_g1, correct_g1 = TRUE,0.5)
n1<-replace(correct_g1, correct_g1 = TRUE,0.5)
print(correct_g1)
n1<-replace(correct_g1, correct_g1 = TRUE,0.5)
print(correct_g1)
n1<-eplace(correct_g1, correct_g1==TRUE, 1)
print(correct_g1)
n1<-replace(correct_g1, correct_g1==TRUE, 1)
print(n1)
n1<-replace(correct_g1, correct_g1==TRUE, 1)
print(correct_g1)
print(n1)
numeric_1<-replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1<-replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1<-replace(correct_g1, correct_g1==FALSE, 0)
numeric_2<-replace(correct_g2, correct_g1==TRUE, 0.5)
numeric_2<-replace(correct_g2, correct_g1==FALSE, 0)
print(numeric_1)
numeric_both = numeric_
numeric_1<-replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1<-replace(correct_g1, correct_g1==FALSE, 0)
numeric_2<-replace(correct_g2, correct_g1==TRUE, 0.5)
numeric_2<-replace(correct_g2, correct_g1==FALSE, 0)
print(numeric_2)
numeric_both = numeric_
numeric_1<-replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1<-replace(correct_g1, correct_g1==FALSE, 0)
numeric_2<-replace(correct_g2, correct_g1==TRUE, 0.5)
numeric_2<-replace(correct_g2, correct_g1==FALSE, 0)
print(numeric_2)
replace(correct_g1, correct_g1==TRUE, 0.5)
replace(correct_g1, correct_g1==FALSE, 0)
replace(correct_g2, correct_g1==TRUE, 0.5)
replace(correct_g2, correct_g1==FALSE, 0)
print(correct_g1)
replace(correct_g1, correct_g1==TRUE, 0.5)
replace(correct_g1, correct_g1==FALSE, 0)
replace(correct_g2, correct_g1==TRUE, 0.5)
replace(correct_g2, correct_g1==FALSE, 0)
print(correct_g1)
replace(correct_g1, correct_g1==TRUE, 0.5)
replace(correct_g1, correct_g1==FALSE, 0)
replace(correct_g2, correct_g2==TRUE, 0.5)
replace(correct_g2, correct_g2==FALSE, 0)
print(correct_g1)
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(correct_g1, correct_g1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(correct_g2, correct_g2==FALSE, 0)
print(correct_g1)
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(correct_g1, correct_g1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(correct_g2, correct_g2==FALSE, 0)
print(numeric_1)
print(numeric_2)
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(numeric_1, numeric_1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(numeric_2, numeric_2==FALSE, 0)
print(numeric_1)
print(numeric_2)
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(numeric_1, numeric_1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(numeric_2, numeric_2==FALSE, 0)
numeric_total <- numeric_1+numeric_2
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(numeric_1, numeric_1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(numeric_2, numeric_2==FALSE, 0)
numeric_both <- numeric_1+numeric_2
print(numeric_both)
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(numeric_1, numeric_1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(numeric_2, numeric_2==FALSE, 0)
numeric_both <- numeric_1+numeric_2
print(numeric_both)
hist(numeric_both)
abline(v = mean(numeric_both), col = "red", lwd = 3, lty = 2)
abline(v = median(numeric_both), col = "blue", lwd = 3, lty = 3)
# if correct, the proportion is 0.5, add the proportions for green_card1 and green_card2
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(numeric_1, numeric_1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(numeric_2, numeric_2==FALSE, 0)
numeric_both <- numeric_1+numeric_2
print(numeric_both)
hist(numeric_both)
abline(v = mean(numeric_both), col = "red", lwd = 3, lty = 2)
abline(v = median(numeric_both), col = "blue", lwd = 3, lty = 3)
# if correct, the proportion is 0.5, add the proportions for green_card1 and green_card2
numeric_1 <- replace(correct_g1, correct_g1==TRUE, 0.5)
numeric_1 <- replace(numeric_1, numeric_1==FALSE, 0)
numeric_2 <- replace(correct_g2, correct_g2==TRUE, 0.5)
numeric_2 <- replace(numeric_2, numeric_2==FALSE, 0)
numeric_both <- numeric_1+numeric_2
print(numeric_both)
hist(numeric_both)
abline(v = mean(numeric_both), col = "red", lwd = 3, lty = 2)
abline(v = median(numeric_both), col = "blue", lwd = 3, lty = 3)
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- g1 == "a" | g1 == "c"
correct_g2 <- g2 == "a" | g2 == "c"
print(correct_g1)
print(correct_g2)
print(length(which(correct_g1==TRUE)))
print(length(which(correct_g2==TRUE)))
green_1 <- data$green_card1
green_2 <- data$green_card2
correct_g1 <- green_1 == "a" | green_1 == "c"
correct_g2 <- green_2 == "a" | green_2 == "c"
print(correct_g1)
print(correct_g2)
print(length(which(correct_g1==TRUE)))
print(length(which(correct_g2==TRUE)))
correct_both = correct_g1 & correct_g2
percent_both <- length(which(correct_both==TRUE))/length(correct_both)
print(percent_both)
correct_both = correct_g1 & correct_g2
percent1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_both <- length(which(correct_both==TRUE))/length(correct_both)
percent_both_when_1 =  percent_both/percent1
print(percent_both_when_1)
a. *(4 marks)* What could each card potentially reveal about the hypothesis were it turned over?
*
*
b. *(1 mark)* Use your answers above to justify why (a) and (d) are the correct cards to turn over.
# get the green_card from the data, address column by name
red_1<- data$red_card1
red_2 <-data$red_card2
most_selected_card <- function(cards){
card_table <-table(cards)
card_name <-card_table[which.max(card_table)]
return(card_name)
}
print("the first selected card is:")
first_card <-most_selected_card(green_1)
print(first_card)
print("the second selected card is:")
second_card <-most_selected_card(green_2)
print(second_card)
# get the green_card from the data, address column by name
red_1<- data$red_card1
red_2 <-data$red_card2
most_selected_card <- function(cards){
card_table <-table(cards)
card_name <-card_table[which.max(card_table)]
return(card_name)
}
print("the first selected card is:")
first_card <-most_selected_card(red_1)
print(first_card)
print("the second selected card is:")
second_card <-most_selected_card(red_2)
print(second_card)
red_1 <- data$red_card1
red_2 <- data$red_card2
correct_r1 <- red_1 == "a" | red_1 == "c"
correct_red2 <- red_2 == "a" | red_2 == "c"
print(correct_r1)
print(correct_r2)
red_1 <- data$red_card1
red_2 <- data$red_card2
correct_red1 <- red_1 == "a" | red_1 == "c"
correct_red2 <- red_2 == "a" | red_2 == "c"
print(correct_red1)
print(correct_red2)
print(length(which(correct_red1==TRUE)))
print(length(which(correct_red2==TRUE)))
red_1 <- data$red_card1
red_2 <- data$red_card2
correct_r1 <- red_1 == "a" | red_1 == "c"
correct_r2 <- red_2 == "a" | red_2 == "c"
print("correct_r1")
print(correct_r1)
print("correct_r2")
print(correct_r2)
print(length(which(correct_r1==TRUE)))
print(length(which(correct_r2==TRUE)))
correct_g_both = correct_g1 & correct_g2
percent_g1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_g_both <- length(which(correct_both==TRUE))/length(correct_both)
percent_both_when_1 =  percent_g_both/percent_g1
print(percent_both_when_1)
correct_both = correct_g1 & correct_g2
percent_both <- length(which(correct_both==TRUE))/length(correct_both)
print(percent_g_both)
percent_g1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_g2 <- length(which(correct_g2==TRUE))/length(correct_g2)
print(percent_g1)
print(percent_g2)
correct_g_both = correct_g1 & correct_g2
percent_g_both <- length(which(correct_g_both==TRUE))/length(correct_g_both)
print(percent_g_both)
correct_g_both = correct_g1 & correct_g2
percent_g1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_g_both <- length(which(correct_g_both==TRUE))/length(correct_g_both)
percent_both_when_1 =  percent_g_both/percent_g1
print(percent_both_when_1)
# get the green_card from the data, address column by name
red_1<- data$red_card1
red_2 <-data$red_card2
most_selected_card <- function(cards){
card_table <-table(cards)
card_name <-card_table[which.max(card_table)]
return(card_name)
}
print("the first selected card is:")
first_card <-most_selected_card(red_1)
print(first_card)
print("the second selected card is:")
second_card <-most_selected_card(red_2)
print(second_card)
percent_r1 <- length(which(correct_r1==TRUE))/length(correct_r1)
percent_r2 <- length(which(correct_r2==TRUE))/length(correct_r2)
print(percent_r1)
print(percent_r2)
correct_r1 <- r1 =='a' || r1 == 'd'
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
percent_r1 <- length(which(correct_r1==TRUE))/length(correct_r1)
percent_r2 <- length(which(correct_r2==TRUE))/length(correct_r2)
print(percent_r1)
print(percent_r2)
red_1 <- data$red_card1
red_2 <- data$red_card2
correct_r1 <- red_1 == "a" | red_1 == "d"
correct_r2 <- red_2 == "a" | red_2 == "d"
print("correct_r1")
print(correct_r1)
print("correct_r2")
print(correct_r2)
print(length(which(correct_r1==TRUE)))
print(length(which(correct_r2==TRUE)))
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
percent_r1 <- length(which(correct_r1==TRUE))/length(correct_r1)
percent_r2 <- length(which(correct_r2==TRUE))/length(correct_r2)
print(percent_r1)
print(percent_r2)
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
print(correct_r1)
print(correct_r2)
percent_r1 <- length(which(correct_r1==TRUE))/length(correct_r1)
percent_r2 <- length(which(correct_r2==TRUE))/length(correct_r2)
print(percent_r1)
print(percent_r2)
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
print(correct_r1)
print(correct_r2)
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
print(correct_r1)
print(correct_r2)
print(red_2)
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
print(correct_r1)
print(correct_r2)
print(red_1)
print(red_2)
correct_r1 <- red_1 =='a' || red_1 == 'd'
correct_r2 <- red_2 =='a' || red_2 == 'd'
print(correct_r1)
print(correct_r2)
print(red_1)
print(red_2)
correct_r1 <- red_1 == "a" || red_1 == "d"
correct_r2 <- red_2 == "a" || red_2 == "d"
print(correct_r1)
print(correct_r2)
print(red_1)
print(red_2)
correct_r1 <- red_1 == "a" || red_1 == "d"
correct_r2 <- red_2 == "a" || red_2 == "d"
print(correct_r1)
print(correct_r2)
print(red_1)
print(red_2)
correct_r1 <- red_1 == "a" | red_1 == "d"
correct_r2 <- red_2 == "a" | red_2 == "d"
print(correct_r1)
print(correct_r2)
percent_r1 <- length(which(correct_r1==TRUE))/length(correct_r1)
percent_r2 <- length(which(correct_r2==TRUE))/length(correct_r2)
print(percent_r1)
print(percent_r2)
correct_r_both = correct_r1 & correct_r2
percent_r_both <- length(which(correct_r_both==TRUE))/length(correct_r_both)
print(percent_r_both)
correct_g_both = correct_g1 & correct_g2
percent_g1 <- length(which(correct_g1==TRUE))/length(correct_g1)
percent_g_both <- length(which(correct_g_both==TRUE))/length(correct_g_both)
percent_g_both_when_1 =  percent_g_both/percent_g1
print(percent_g_both_when_1)
correct_r_both = correct_r1 & correct_r2
percent_r1 <- length(which(correct_r1==TRUE))/length(correct_r1)
percent_r_both <- length(which(correct_r_both==TRUE))/length(correct_r_both)
percent_r_both_when_1 =  percent_r_both/percent_r1
print(percent_r_both_when_1)
# if correct, the proportion is 0.5, add the proportions for green_card1 and green_card2
numeric_r1 <- replace(correct_r1, correct_r1==TRUE, 0.5)
numeric_r1 <- replace(numeric_r1, numeric_r1==FALSE, 0)
numeric_r2 <- replace(correct_r2, correct_r2==TRUE, 0.5)
numeric_r2 <- replace(numeric_r2, numeric_r2==FALSE, 0)
numeric_r_both <- numeric_r1+numeric_r2
print(numeric_r_both)
hist(numeric_r_both)
abline(v = mean(numeric_r_both), col = "red", lwd = 3, lty = 2)
abline(v = median(numeric_r_both), col = "blue", lwd = 3, lty = 3)
# get the green_card from the data, address column by name
green_1<- data$green_card1
green_2 <-data$green_card2
most_selected_card <- function(cards){
card_table <-table(cards)
card_name <-card_table[which.max(card_table)]
return(card_name)
}
#print("the first selected card is:")
first_card <-most_selected_card(green_1)
#print(first_card)
#print("the second selected card is:")
second_card <-most_selected_card(green_2)
#print(second_card)
knitr::opts_chunk$set(echo = TRUE)
set.seed(12314159)
imageDirectory <- "./img"
dataDirectory <- "./data"
path_concat <- function(path1, path2, sep="/") {
paste(path1, path2, sep = sep)
}
# Usual helper for paths
path_concat <- function(path1, path2, sep="/") {
paste(path1, path2, sep = sep)
}
data <- read.csv(file = path_concat(dataDirectory, "class_data.csv"))
# Usual helper for paths
path_concat <- function(path1, path2, sep="/") {
paste(path1, path2, sep = sep)
}
data <- read.csv(file = path_concat(dataDirectory, "class_data.csv"))
# Usual helper for paths
path_concat <- function(path1, path2, sep="/") {
paste(path1, path2, sep = sep)
}
data <- read.csv(file = path_concat(dataDirectory, "class_data.csv"))
print(data)
# Usual helper for paths
path_concat <- function(path1, path2, sep="/") {
paste(path1, path2, sep = sep)
}
data <- read.csv(file = path_concat(dataDirectory, "class_data.csv"))
# Usual helper for paths
path_concat <- function(path1, path2, sep="/") {
paste(path1, path2, sep = sep)
}
data <- read.csv(file = path_concat(dataDirectory, "class_data.csv"))
# just print it
data
# view its contents as a spreadsheet (in RStudio)
View(data)
# or, look at its data structure
str(data)
names(data)
the_random_digit = data $random_digit
the_random_digit = data $random_digit
print(the_random_digit)
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same = the_random_digit == the_random_digit
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same = the_random_digit == the_random_digit
print(same)
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same <- the_random_digit == the_random_digit
print(same)
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same <- the_random_digit == the_random_digit
print(same)
print(percent_both_when_1)
function(x,y){if( x == y){return (True)}else{return (False)
}
}
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same <- mapply(function(x,y){if( x == y){return (True)}else{return (False)}},the_random_digit,the_student_digit)
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same <- mapply(function(x,y){if( x == y){return (TRUE)}else{return (FALSE)}},the_random_digit,the_student_digit)
print(same)
the_random_digit = data$random_digit
the_student_digit = data$student_digit
print(the_random_digit)
print(the_student_digit)
same <- mapply(function(x,y){if( x == y){return (TRUE)}else{return (FALSE)}},the_random_digit,the_student_digit)
print(same)
median(seq(0,9,1))
