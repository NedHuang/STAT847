print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  paste("p=",x,sep="")),
col = colors,
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","yellow","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
col = colors,
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","yellow","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
col = colors,
rgb = colors,
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","yellow","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
col = c("red","green","yellow","maroon")
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","yellow","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
#legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
legend = p_list,
col = c("red","green","yellow","maroon")
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","yellow","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
#legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
legend = p_list,
col = c("red","green","yellow","maroon"),
pch=1
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","yellow","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
#legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
legend = p_list,
col = c("red","green","yellow","maroon"),
lty=2,
lwd=2
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","pink","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
#legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
legend = p_list,
col = colors,
lty=2,
lwd=2
)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","pink","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="value of SD",ylab="n")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
#legend = p_list,
col = colors,
lty=2,
lwd=2
)
rbinom(5,0.5)
rbinom(5,100,0.5)
rbinom(5,100,0.5)
rbinom(5,100,0.5)
rbinom(5,0.5)
rbinom(5,0.5)
rbinom(5,100,0.5)
n_list = seq(5,50,5)
n_list
for(i in 1:10):
for(i in 1:10){}
for(i in 1:10){
}
ans = c()
for(i in 1:10){
ans = c(and, rep(rbinom(n_list[i],100,0.5),100))
}
for(i in 1:10){
ans = c(ans, rep(rbinom(n_list[i],100,0.5),100))
}
ans
len(ans)
length(ans)
rbinom(5,100,0.5)
rbinom(5,100,0.5)
rbinom(5,100,0.5)
rbinom(1,100,0.5)
rbinom(5,100,0.5)
rbinom(5,100,0.1)
rbinom(5,100,0.5)
n_list = seq(5,50,5)
vals<-apply(n_list, function(x) rep(rbinom(x,100,0.5),100))
n_list = seq(5,50,5)
vals<-sapply(n_list, function(x) rep(rbinom(x,100,0.5),100))
n_list = seq(5,50,5)
vals<-sapply(n_list, function(x) rep(rbinom(x,100,0.5),100))
print(length(vals))
print(vals)
n= 5*rep(1:10,1)
n
sapply(n, function(x) rbinom(100,x,0.5)/x)
rbinom(100,x,0.5)
rbinom(100,5,0.5)
rbinom(100,50,0.5)
rbinom(1,50,0.5)
rbinom(100,50,0.5)
sapply(n, function(x) rbinom(100,x,0.5)/x)
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","pink","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=2, type="l",col=colors[1],xlab="n",ylab="value of SD")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=2, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
#legend = p_list,
col = colors,
lty=2,
lwd=2
)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
print(vals)
c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5
plot(n_list, vals[,1])
plot(n_list)
plot(n_list, vals[1,])
plot(n_list, vals[2,])
plot(n_list, vals[1,])
for(i in 2:length(100)):
for(i in 2:length(100)){}
for(i in 2:length(100)){
lines(n_list,vals[,i])
}
for(i in 2:length(100)){
lines(n_list,vals[,i])}
plot(n_list, vals[1,])
lines(n_list, vals[2,])
lines(n_list, vals[2,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
lines(n_list, vals[2,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
plot(n_list, vals[1,])
lines(n_list, vals[2,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
plot(n_list, vals[1,])
for( i in 2:100){lines(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
plot(n_list, vals[1,])
for( i in 2:100){lines(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,])
for( i in 2:100){lines(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5))
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
for( i in 2:100){lines(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
#for( i in 2:100){lines(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
for( i in 2:100){dots(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
for( i in 2:100){scatter(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
for( i in 2:100){scatterplot(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
for( i in 2:100){lty(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
for( i in 2:100){lines(n_list, vals[i,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)}
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(1,length(n_list)*100)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(1,length(n_list)*100)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(1,length(n_list)*100)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(1,length(n_list)*100)
plot(n_list, vals[1,], ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(1,length(n_list)*100)
plot(n_list, vals, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(1,length(n_list)*100)
print(vals)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(length(n_list)*100,1)
print(vals)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
dim(vals)<-c(length(n_list)*100,1)
print(vals)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
print(vals)
n_list = seq(5,50,5)
n_lists
n_list
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
valu_unlisted <- unlist(vals)
valu_unlisted
n = rep(seq(5,50,5),times=rep(100,10))
n
plot(n,valu_unlisted)
rep(seq(5,50,5),100)
rep(seq(5,50,5),times=100)
rep(seq(5,50,5),times=100)
rep(seq(5,50,5),each = 100)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, vals_for_plot, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, vals_for_plot, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, vals_for_plot, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion $p$ vs sample size $n$")
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, vals_for_plot, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion italic("p") vs sample size n")
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, vals_for_plot, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, vals_for_plot, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
abline(h=0.5,lty=2,col="red")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(jitter(n_for_plot), jitter(vals_for_plot,2), ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(n_for_plot, jitter(vals_for_plot,2), ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
plot(jitter(n_for_plot,2), vals_for_plot,2, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
n_for_plot2 = jitter(n_for_plot,2)
plot(n_for_plot2, vals_for_plot,2, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals_for_plot = unlist(vals)
n_for_plot = rep(seq(5,50,5),each = 100)
n_for_plot2 = jitter(n_for_plot,2)
print(n_for_plot2)
plot(n_for_plot2, vals_for_plot,2, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals1 = unlist(vals)
n1 = rep(seq(5,50,5),each = 100)
n2 = jitter(n_for_plot,2)
plot(n1, vals1, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
jitter(n, 2)
n_list = seq(5,50,5)
vals<- sapply(n_list, function(n) rbinom(100,n,0.5)/n)
vals1 = unlist(vals)
n1 = rep(seq(5,50,5),each = 100)
n2 = jitter(n_for_plot,2)
plot(jitter(n1,2), vals1, ylim = c(0,1), pch = 19, col =adjustcolor("steelblue", 0.2), cex = 0.5,
xlab = "size n",ylab = "proportion",main="proportion p vs sample size n")
n_list = seq(5,50,5)
p_list = c(0.1,0.3,0.5,0.8)
colors = c("red","green","pink","maroon")
get_sd <- function(n_list,p_list){
ans_list = c()
for(i in 1:length(p_list)){
ans <- c(sapply(n_list, function(n) sqrt(p_list[i]*(1-p_list[i])/n)))
ans_list <- c(ans_list,ans)
print(typeof(ans))
}
return(ans_list)
}
vals<-get_sd(n_list, p_list)
dim(vals)<-c(10,4)
plot(n_list,vals[,1],lwd = 2,lty=1, type="l",col=colors[1],xlab="n",ylab="value of SD")
for(i in 2:length(p_list)){
print(length(n_list))
print(vals[,i])
lines(n_list,vals[,i],lwd = 2,lty=i, type ="l",col=colors[i])
}
legend("bottomleft",
legend = lapply(p_list,  function(x) paste("p=",x,sep="")),
#legend = p_list,
col = colors,
lty=c(1,2,3,4),
lwd=2
)
